{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","imagesFromServer","props","images","step","frameSize","itemWidth","animationDuration","infinite","slice","stepState","forwardArrow","backwardArrow","forward","setState","lastIndex","length","endOfImagesArr","backward","changeSettings","property","propertyValue","className","type","this","onClick","disabled","style","width","height","map","image","src","alt","defaultValue","onChange","e","target","value","min","max","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gQAyBMA,E,4MACJC,MAAQ,CACNC,iBAAkB,EAAKC,MAAMC,OAC7BC,KAAM,EAAKF,MAAME,KACjBC,UAAW,EAAKH,MAAMG,UACtBC,UAAW,EAAKJ,MAAMI,UACtBC,kBAAmB,EAAKL,MAAMK,kBAC9BC,SAAU,EAAKN,MAAMM,SACrBL,OAAQ,EAAKD,MAAMC,OAAOM,MAAM,EAAG,EAAKP,MAAMG,WAC9CK,UAAW,EACXC,cAAc,EACdC,eAAe,G,EAGjBC,QAAU,WACR,EAAKC,UAAS,SAACd,GACb,IACEC,EAIED,EAJFC,iBACAI,EAGEL,EAHFK,UACAD,EAEEJ,EAFFI,KACAI,EACER,EADFQ,SAGIE,EAAcV,EAAdU,UAEAK,EAAYd,EAAiBe,OAAS,GAE5CN,GAAaN,GAEGW,IACdL,GAAaK,EAAY,GAG3B,IAAME,EAAiBP,EAAYN,GAAQC,EAAYD,GAEvD,OAAIa,EAAiBF,EACdP,EASE,CACLL,OAAO,GAAD,mBACDF,EAAiBQ,MAAMC,IADtB,YAEDT,EAAiBQ,MAAM,EAAGQ,EAAiBF,EAAY,KAE5DL,aAbO,CACLP,OAAQF,EAAiBQ,MAAMC,GAC/BA,YACAC,cAAc,EACdC,eAAe,GAad,CACLT,OAAQF,EAAiBQ,MAAMC,EAAWO,GAC1CP,YACAC,cAAc,EACdC,eAAe,O,EAKrBM,SAAW,WACT,EAAKJ,UAAS,SAACd,GACb,IACEC,EAIED,EAJFC,iBACAG,EAGEJ,EAHFI,KACAC,EAEEL,EAFFK,UACAG,EACER,EADFQ,SAGIE,EAAcV,EAAdU,UAEAK,EAAYd,EAAiBe,OAAS,EAItCC,GAFNP,GAAaN,GAEsBA,GAAQC,EAAYD,GAEvD,OAAKI,GAAYE,GAAa,EACrB,CACLP,OAAQF,EAAiBQ,MAAM,EAAGJ,GAClCK,UAAW,EACXE,eAAe,GAIfF,EAAY,GACdA,EAAYK,EAAYL,EAAY,EAE7B,CACLP,OAAO,GAAD,mBACDF,EAAiBQ,MAAMC,IADtB,YAEDT,EAAiBQ,MAAM,EAAGQ,KAE/BP,cAIAO,EAAiBF,EACZ,CACLZ,OAAO,GAAD,mBACDF,EAAiBQ,MAAMC,IADtB,YAEDT,EAAiBQ,MAAM,EAAGQ,EAAiBF,EAAY,KAE5DL,YACAC,cAAc,EACdC,eAAe,GAIZ,CACLT,OAAQF,EAAiBQ,MAAMC,EAAWO,GAC1CP,YACAC,cAAc,EACdC,eAAe,O,EAKrBO,eAAiB,SAACC,EAAkBC,GAClC,OAAQD,GACN,IAAK,YACH,EAAKN,UAAS,WACZ,MAAO,CACLR,WAAYe,MAGhB,MAEF,IAAK,YACH,EAAKP,UAAS,SAACd,GACb,MAAO,CACLK,WAAYgB,EACZlB,OAAQH,EAAMC,iBAAiBQ,MAAM,GAAIY,GACzCX,UAAW,MAGf,MAEF,IAAK,OACH,EAAKI,UAAS,SAACd,GACb,MAAO,CACLG,OAAQH,EAAMC,iBAAiBQ,MAAM,EAAGT,EAAMK,WAC9CD,MAAOiB,EACPX,UAAW,MAGf,MAEF,IAAK,oBACH,EAAKI,UAAS,WACZ,MAAO,CACLP,mBAAoBc,MAGxB,MAEF,QACE,EAAKP,UAAS,SAACd,GACb,MAAO,CACLG,OAAQH,EAAMC,iBAAiBQ,MAAM,EAAGT,EAAMK,WAC9CK,UAAW,EACXF,UAAWR,EAAMQ,SACjBI,eAAgBZ,EAAMY,kBAK9B,OAAO,M,4CAGT,WAAU,IAAD,OACP,OACE,sBAAKU,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,KAAKxB,MAAMY,cAClB,mCAEA,6EACJa,QAAS,kBAAM,EAAKP,YACpBQ,UAAWF,KAAKxB,MAAMY,cAPxB,0BAWA,qBACEU,UAAU,2BACVK,MAAO,CACLC,MAAOJ,KAAKxB,MAAMM,UAAYkB,KAAKxB,MAAMK,UACzCwB,OAAQL,KAAKxB,MAAMM,WAJvB,SAOE,oBACEgB,UAAU,iCADZ,SAGGE,KAAKxB,MAAMG,OACT2B,KAAI,SAAAC,GAAK,OACR,oBAEET,UAAU,uCAFZ,SAIE,qBACEU,IAAKD,EACLE,IAAI,kBACJX,UAAU,sCACVK,MAAO,CAAEC,MAAO,EAAK5B,MAAMM,cAPxByB,UAaf,wBACER,KAAK,SACLD,UAAWE,KAAKxB,MAAMW,aAClB,mCAEA,6EACJc,QAAS,kBAAM,EAAKZ,WACpBa,UAAWF,KAAKxB,MAAMW,aAPxB,6BAYF,uBACEW,UAAU,qBADZ,UAGE,wBAAOA,UAAU,4BAAjB,UACE,sBAAMA,UAAU,mCAAhB,yBAGA,uBACEC,KAAK,SACLD,UAAU,4BACVY,aAAcV,KAAKxB,MAAMM,UACzB6B,SAAU,SAACC,GAAD,OAAO,EAAKjB,eAAe,YAAaiB,EAAEC,OAAOC,aAG/D,wBAAOhB,UAAU,4BAAjB,UACE,sBAAMA,UAAU,mCAAhB,yBAGA,uBACEC,KAAK,SACLD,UAAU,4BACVY,aAAcV,KAAKxB,MAAMK,UACzB8B,SAAU,SAACC,GACT,QAAQ,GACN,KAAMA,EAAEC,OAAOC,MAAQ,EAAKtC,MAAMC,iBAAiBe,OAGnD,KAAMoB,EAAEC,OAAOC,MAAQ,EAGvB,KAAMF,EAAEC,OAAOC,MAAQ,EAAKtC,MAAMI,KAChC,MAEF,QACE,EAAKe,eAAe,YAAaiB,EAAEC,OAAOC,SAGhDC,IAAK,EACLC,IAAKhB,KAAKxB,MAAMC,iBAAiBe,YAGrC,wBAAOM,UAAU,4BAAjB,UACE,sBAAMA,UAAU,mCAAhB,mBAGA,uBACEC,KAAK,SACLD,UAAU,4BACVY,aAAcV,KAAKxB,MAAMI,KACzBmC,IAAK,EACLC,IAAKhB,KAAKxB,MAAMK,UAAY,EAC5B8B,SAAU,SAACC,GACT,QAAQ,GACN,KAAMA,EAAEC,OAAOC,MAAQ,EAAKtC,MAAMC,iBAAiBe,OAAS,EAG5D,KAAMoB,EAAEC,OAAOC,MAAQ,EAGvB,KAAMF,EAAEC,OAAOC,MAAQ,EAAKtC,MAAMK,UAAY,EAC5C,MAEF,QACE,EAAKc,eAAe,OAAQiB,EAAEC,OAAOC,cAK/C,wBAAOhB,UAAU,4BAAjB,UACE,sBAAMA,UAAU,mCAAhB,iCAGA,uBACEC,KAAK,SACLD,UAAU,4BACVY,aAAcV,KAAKxB,MAAMO,kBACzB4B,SAAU,SAACC,GAAD,OAAO,EAAKjB,eACpB,oBACAiB,EAAEC,OAAOC,aAIf,wBAAOhB,UAAU,4BAAjB,UACE,sBAAMA,UAAU,mCAAhB,uBAGA,uBACEC,KAAK,WACLD,UAAU,4BACVa,SAAU,SAACC,GAAD,OAAO,EAAKjB,eAAe,WAAYiB,EAAEC,OAAOC,uB,GA3TjDG,IAAMC,WAoUd3C,ICpVT4C,E,4MACJ3C,MAAQ,CACNG,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iB,4CAIJ,WACE,IAAQA,EAAWqB,KAAKxB,MAAhBG,OAER,OACE,sBAAKmB,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAd,2BAA0CnB,EAAOa,OAAjD,aACA,cAAC,EAAD,CACEb,OAAQA,EACRC,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,W,GA7BFiC,IAAMC,WAoCTC,IC1CfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f038a09f.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  imagesFromServer: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean;\n  images: string[],\n  stepState: number,\n  forwardArrow?: boolean,\n  backwardArrow?: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    imagesFromServer: this.props.images,\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    itemWidth: this.props.itemWidth,\n    animationDuration: this.props.animationDuration,\n    infinite: this.props.infinite,\n    images: this.props.images.slice(0, this.props.frameSize),\n    stepState: 0,\n    forwardArrow: true,\n    backwardArrow: false,\n  };\n\n  forward = () => {\n    this.setState((state) => {\n      const {\n        imagesFromServer,\n        frameSize,\n        step,\n        infinite,\n      } = state;\n\n      let { stepState } = state;\n\n      const lastIndex = imagesFromServer.length - 1;\n\n      stepState += step;\n\n      if (stepState > lastIndex) {\n        stepState -= lastIndex + 1;\n      }\n\n      const endOfImagesArr = stepState + step + (frameSize - step);\n\n      if (endOfImagesArr > lastIndex) {\n        if (!infinite) {\n          return {\n            images: imagesFromServer.slice(stepState),\n            stepState,\n            forwardArrow: false,\n            backwardArrow: true,\n          };\n        }\n\n        return {\n          images: [\n            ...imagesFromServer.slice(stepState),\n            ...imagesFromServer.slice(0, endOfImagesArr - lastIndex - 1),\n          ],\n          stepState,\n        };\n      }\n\n      return {\n        images: imagesFromServer.slice(stepState, endOfImagesArr),\n        stepState,\n        forwardArrow: true,\n        backwardArrow: true,\n      };\n    });\n  };\n\n  backward = () => {\n    this.setState((state) => {\n      const {\n        imagesFromServer,\n        step,\n        frameSize,\n        infinite,\n      } = state;\n\n      let { stepState } = state;\n\n      const lastIndex = imagesFromServer.length - 1;\n\n      stepState -= step;\n\n      const endOfImagesArr = stepState + step + (frameSize - step);\n\n      if (!infinite && stepState <= 0) {\n        return {\n          images: imagesFromServer.slice(0, frameSize),\n          stepState: 0,\n          backwardArrow: false,\n        };\n      }\n\n      if (stepState < 0) {\n        stepState = lastIndex + stepState + 1;\n\n        return {\n          images: [\n            ...imagesFromServer.slice(stepState),\n            ...imagesFromServer.slice(0, endOfImagesArr),\n          ],\n          stepState,\n        };\n      }\n\n      if (endOfImagesArr > lastIndex) {\n        return {\n          images: [\n            ...imagesFromServer.slice(stepState),\n            ...imagesFromServer.slice(0, endOfImagesArr - lastIndex - 1),\n          ],\n          stepState,\n          forwardArrow: true,\n          backwardArrow: true,\n        };\n      }\n\n      return {\n        images: imagesFromServer.slice(stepState, endOfImagesArr),\n        stepState,\n        forwardArrow: true,\n        backwardArrow: true,\n      };\n    });\n  };\n\n  changeSettings = (property: string, propertyValue: string | number) => {\n    switch (property) {\n      case 'itemWidth':\n        this.setState(() => {\n          return {\n            itemWidth: +propertyValue,\n          };\n        });\n        break;\n\n      case 'frameSize':\n        this.setState((state) => {\n          return {\n            frameSize: +propertyValue,\n            images: state.imagesFromServer.slice(0, +propertyValue),\n            stepState: 0,\n          };\n        });\n        break;\n\n      case 'step':\n        this.setState((state) => {\n          return {\n            images: state.imagesFromServer.slice(0, state.frameSize),\n            step: +propertyValue,\n            stepState: 0,\n          };\n        });\n        break;\n\n      case 'animationDuration':\n        this.setState(() => {\n          return {\n            animationDuration: +propertyValue,\n          };\n        });\n        break;\n\n      default:\n        this.setState((state) => {\n          return {\n            images: state.imagesFromServer.slice(0, state.frameSize),\n            stepState: 0,\n            infinite: !state.infinite,\n            backwardArrow: !state.backwardArrow,\n          };\n        });\n    }\n\n    return null;\n  };\n\n  render() {\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel-gallery\">\n          <button\n            type=\"button\"\n            className={this.state.backwardArrow\n              ? 'Carousel-gallery__images__button'\n              // eslint-disable-next-line max-len\n              : 'Carousel-gallery__images__button Carousel-gallery__images__button-unactive'}\n            onClick={() => this.backward()}\n            disabled={!this.state.backwardArrow}\n          >\n            &#129172;\n          </button>\n          <div\n            className=\"Carousel-gallery__images\"\n            style={{\n              width: this.state.itemWidth * this.state.frameSize,\n              height: this.state.itemWidth,\n            }}\n          >\n            <ul\n              className=\"Carousel-gallery__images__list\"\n            >\n              {this.state.images\n                .map(image => (\n                  <li\n                    key={image}\n                    className=\"Carousel-gallery__images__list__item\"\n                  >\n                    <img\n                      src={image}\n                      alt=\"gallery element\"\n                      className=\"Carousel-gallery__images__list__img\"\n                      style={{ width: this.state.itemWidth }}\n                    />\n                  </li>\n                ))}\n            </ul>\n          </div>\n          <button\n            type=\"button\"\n            className={this.state.forwardArrow\n              ? 'Carousel-gallery__images__button'\n              // eslint-disable-next-line max-len\n              : 'Carousel-gallery__images__button Carousel-gallery__images__button-unactive'}\n            onClick={() => this.forward()}\n            disabled={!this.state.forwardArrow}\n          >\n            &#129174;\n          </button>\n        </div>\n        <form\n          className=\"Carousel__settings\"\n        >\n          <label className=\"Carousel__settings__label\">\n            <span className=\"Carousel__settings__label__title\">\n              Item width:\n            </span>\n            <input\n              type=\"number\"\n              className=\"Carousel__settings__input\"\n              defaultValue={this.state.itemWidth}\n              onChange={(e) => this.changeSettings('itemWidth', e.target.value)}\n            />\n          </label>\n          <label className=\"Carousel__settings__label\">\n            <span className=\"Carousel__settings__label__title\">\n              Frame size:\n            </span>\n            <input\n              type=\"number\"\n              className=\"Carousel__settings__input\"\n              defaultValue={this.state.frameSize}\n              onChange={(e) => {\n                switch (true) {\n                  case +e.target.value > this.state.imagesFromServer.length:\n                    break;\n\n                  case +e.target.value < 1:\n                    break;\n\n                  case +e.target.value < this.state.step:\n                    break;\n\n                  default:\n                    this.changeSettings('frameSize', e.target.value);\n                }\n              }}\n              min={1}\n              max={this.state.imagesFromServer.length}\n            />\n          </label>\n          <label className=\"Carousel__settings__label\">\n            <span className=\"Carousel__settings__label__title\">\n              Step:\n            </span>\n            <input\n              type=\"number\"\n              className=\"Carousel__settings__input\"\n              defaultValue={this.state.step}\n              min={1}\n              max={this.state.frameSize - 1}\n              onChange={(e) => {\n                switch (true) {\n                  case +e.target.value > this.state.imagesFromServer.length - 1:\n                    break;\n\n                  case +e.target.value < 1:\n                    break;\n\n                  case +e.target.value > this.state.frameSize - 1:\n                    break;\n\n                  default:\n                    this.changeSettings('step', e.target.value);\n                }\n              }}\n            />\n          </label>\n          <label className=\"Carousel__settings__label\">\n            <span className=\"Carousel__settings__label__title\">\n              Animation duration:\n            </span>\n            <input\n              type=\"number\"\n              className=\"Carousel__settings__input\"\n              defaultValue={this.state.animationDuration}\n              onChange={(e) => this.changeSettings(\n                'animationDuration',\n                e.target.value,\n              )}\n            />\n          </label>\n          <label className=\"Carousel__settings__label\">\n            <span className=\"Carousel__settings__label__title\">\n              Infinite:\n            </span>\n            <input\n              type=\"checkbox\"\n              className=\"Carousel__settings__input\"\n              onChange={(e) => this.changeSettings('Infinite', e.target.value)}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className=\"App__title\">Carousel with {images.length} images</h1>\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}